---
title: "Applied Statistical Methods - Solution 10"
author: "Peter von Rohr"
date: 2024-05-13
filters: 
  - webr
webr:
  packages: ['Matrix', 'lme4', 'pedigreemm']
---

## Problem 1: Sire Model

```{r}
#| label: ex10-p01-setup
#| echo: false
s_ex10_p01_data_path <- "https://charlotte-ngs.github.io/asmasss2024/data/asm_ped_sim_data.csv"
# variance components
sigma_u2 <- 9
sigma_s2 <- sigma_u2 / 4
sigma_e2 <- 36
```

Use the dataset available from the address shown below to predict sire-breeding values using a sire model.

```{r}
#| echo: false
#| results: asis
cat(s_ex10_p01_data_path, "\n")
```


### Hints

* The variance component $\sigma_s^2$ of the sire effect can be assumed to be  $`r sigma_s2`$.
* The variance component $\sigma_e^2$ of the random resiudals is $`r sigma_e2`$.
* Sex is modelled as a fixed effect.
* The inverse sire relationship matrix can be computed using the function `getAInv()` from the `pedigreemm` package.


### Solution

#### Specify the model

$$y = Xb + Zs + e$$

with vectors 

* $y$ of length $n$ containing known phenotypic observations
* $b$ of length $p$ containing unknown fixed effects
* $s$ of length $q$ containing unknown random sire breeding values
* $e$ of length $n$ containing unknown random residuals

Known design matrices 

* $X$ of dimension $n\times p$ linking fixed effects to observations and 
* $Z$ of dimension $n\times q$ linking random breeding values to observations

The expected values and co-variance matrices of the random effects are 

$$E\left[\begin{array}{c} y \\ s \\ e \end{array}\right] =  \left[\begin{array}{c} Xb \\ 0 \\ 0 \end{array}\right]$$

$$var\left[\begin{array}{c} y \\ s \\ e \end{array}\right] = \left[\begin{array}{ccc} V  &  ZG_s  &  R\\  G_sZ^T  &  G_s  &  0\\  R  &  0  & R \end{array}\right]$$

with $R = I * \sigma_e^2$, $G_s = A_s \sigma_s^2$ and $V = ZG_sZ^T + R$. 


#### Read the data

```{webr-r}
# read data to data.frame
s_ex10_p01 <- "https://charlotte-ngs.github.io/asmasss2024/data/asm_ped_sim_data.csv"
df_lme <- read.table(s_ex10_p01, header = T, sep = ",")
df_lme
```

* Inverse Sire Relationship Matrix

```{webr-r}
#| message: false
#| warning: false
# construct vector of all sires
vec_sire <- unique(df_lme$SIRE)
vec_sire <- vec_sire[!is.na(vec_sire)]
n_nr_sire <- length(vec_sire)
# get sire of sires
vec_sire_sire <- sapply(vec_sire, 
                        function(x) ifelse(is.element(x, df_lme$ID), 
                                           df_lme$SIRE[df_lme$ID == x],NA))
# specify sire pedigree
library(pedigreemm)
ped_sire <- pedigree(sire = vec_sire_sire,
                    dam  = rep(NA, n_nr_sire),
                    label = as.character(vec_sire))
# inverse sire relationship matrix
mat_inv_sire <- as.matrix(getAInv(ped_sire))
dimnames(mat_inv_sire) <- NULL
mat_inv_sire
```

#### Setup mixed model equations

$$
\left[ 
\begin{array}{cc}
X^TX  &  X^TZ \\
Z^TX  &  Z^TZ + \lambda_s * A_s^{-1}
\end{array}
\right]
\left[ 
\begin{array}{c}
\hat{b} \\
\hat{s}
\end{array}
\right]
= 
\left[ 
\begin{array}{c}
X^Ty \\
Z^Ty
\end{array}
\right]
$$


Get the known components from the data into the mixed-model equations

* Design matrix $X$

```{webr-r}
# matrix X
mat_X <- model.matrix(P ~ SEX, data = df_lme)
attr(mat_X, "assign") <- NULL
attr(mat_X, "contrasts") <- NULL
dimnames(mat_X) <- NULL
mat_X
```

* Design matrix $Z$

```{webr-r}
# matrix Z
mat_Z <- model.matrix(P ~ 0 + as.factor(SIRE), data = df_lme)
attr(mat_Z, "assign") <- NULL
attr(mat_Z, "contrasts") <- NULL
dimnames(mat_Z) <- NULL
mat_Z
```

* Variance ration $\lambda_s = \sigma_e^2/\sigma_s^2$

```{webr-r}
# variance components
sigma_u2 <- 9
sigma_s2 <- sigma_u2 / 4
sigma_e2 <- 36
# lambda
n_lambda_s <- sigma_e2 / sigma_s2
n_lambda_s
```

* Mixed model equations

```{webr-r}
# coefficient matrix
mat_xtx <- crossprod(mat_X)
mat_xtz <- crossprod(mat_X, mat_Z)
mat_ztx <- t(mat_xtz)
mat_ztz_lam_a_inv <- crossprod(mat_Z) + n_lambda_s * mat_inv_sire
mat_coef <- rbind(cbind(mat_xtx, mat_xtz), cbind(mat_ztx, mat_ztz_lam_a_inv))
# right-hand side
mat_rhs <- rbind(crossprod(mat_X, df_lme$P), crossprod(mat_Z, df_lme$P))
# solutions
mat_sol <- solve(mat_coef, mat_rhs)
mat_sol
```


#### Results
The first two numbers of the solutions correspond to estimates $\widehat{b}$ which contains the intercept and the difference between group means of sex `f` and `m`. The remaining numbers in the solutions are the predicted breeding values of the three sires `1`, `2` and `8`. At this point the numeric values of the predicted breeding values are not interesting. What we are interested is the ranking of the sires according to the breeding values. This is obtained by

```{webr-r}
vec_sire_pbv <- mat_sol[3:nrow(mat_sol),1]
names(vec_sire_pbv) <- c("Sire 1", "Sire 2", "Sire 8")
vec_sire_pbv[order(vec_sire_pbv, decreasing = T)]
```


